# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 19
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 20
# Neighbor position:  39, 19
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 20
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 20
# Neighbor position:  39, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 21
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 20
# Neighbor position:  39, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  40
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 21
# Setting previous node for 39,21
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 21
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 20
# Neighbor position:  38, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  41
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 21
# Setting previous node for 38,21
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 21
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 20
# Neighbor position:  37, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  42
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 21
# Setting previous node for 37,21
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 20
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 20
# Neighbor position:  37, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 20
# STATE: QUEUE MODS
# Close size:  78
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 19
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 20
# Neighbor position:  36, 19
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 19
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 20
# Neighbor position:  37, 19
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 19
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 20
# Neighbor position:  38, 19
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 20
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 20
# Neighbor position:  38, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 21
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 20
# Neighbor position:  38, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 21
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 20
# Neighbor position:  37, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 21
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 20
# Neighbor position:  36, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  42
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 21
# Setting previous node for 36,21
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 20
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 20
# Neighbor position:  36, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 21
# STATE: QUEUE MODS
# Close size:  79
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 20
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 21
# Neighbor position:  37, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 20
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 21
# Neighbor position:  38, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 20
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 21
# Neighbor position:  39, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 21
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 21
# Neighbor position:  39, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 22
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 21
# Neighbor position:  39, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  42
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 22
# Setting previous node for 39,22
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 22
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 21
# Neighbor position:  38, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  43
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 22
# Setting previous node for 38,22
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 22
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 21
# Neighbor position:  37, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  44
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 22
# Setting previous node for 37,22
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 21
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 21
# Neighbor position:  37, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 21
# STATE: QUEUE MODS
# Close size:  80
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 20
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 21
# Neighbor position:  36, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 20
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 21
# Neighbor position:  37, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 20
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 21
# Neighbor position:  38, 20
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 21
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 21
# Neighbor position:  38, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 22
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 21
# Neighbor position:  38, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 22
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 21
# Neighbor position:  37, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 22
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 21
# Neighbor position:  36, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  44
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 22
# Setting previous node for 36,22
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 21
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 21
# Neighbor position:  36, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 22
# STATE: QUEUE MODS
# Close size:  81
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 21
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 22
# Neighbor position:  37, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 21
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 22
# Neighbor position:  38, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 21
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 22
# Neighbor position:  39, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 22
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 22
# Neighbor position:  39, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 23
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 22
# Neighbor position:  39, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  44
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 23
# Setting previous node for 39,23
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 23
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 22
# Neighbor position:  38, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  45
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 23
# Setting previous node for 38,23
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 23
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 22
# Neighbor position:  37, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  46
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 23
# Setting previous node for 37,23
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 22
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 22
# Neighbor position:  37, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 22
# STATE: QUEUE MODS
# Close size:  82
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 21
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 22
# Neighbor position:  36, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 21
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 22
# Neighbor position:  37, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 21
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 22
# Neighbor position:  38, 21
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 22
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 22
# Neighbor position:  38, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 23
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 22
# Neighbor position:  38, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 23
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 22
# Neighbor position:  37, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 23
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 22
# Neighbor position:  36, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  46
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 23
# Setting previous node for 36,23
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 22
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 22
# Neighbor position:  36, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 23
# STATE: QUEUE MODS
# Close size:  83
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 22
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 23
# Neighbor position:  37, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 22
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 23
# Neighbor position:  38, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 22
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 23
# Neighbor position:  39, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 23
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 23
# Neighbor position:  39, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 24
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 23
# Neighbor position:  39, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  46
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 24
# Setting previous node for 39,24
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 24
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 23
# Neighbor position:  38, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  47
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 24
# Setting previous node for 38,24
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 24
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 23
# Neighbor position:  37, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  48
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 24
# Setting previous node for 37,24
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 23
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 23
# Neighbor position:  37, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 23
# STATE: QUEUE MODS
# Close size:  84
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 22
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 23
# Neighbor position:  36, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 22
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 23
# Neighbor position:  37, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 22
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 23
# Neighbor position:  38, 22
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 23
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 23
# Neighbor position:  38, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 24
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 23
# Neighbor position:  38, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 24
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 23
# Neighbor position:  37, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 24
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 23
# Neighbor position:  36, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  48
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 24
# Setting previous node for 36,24
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 23
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 23
# Neighbor position:  36, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 24
# STATE: QUEUE MODS
# Close size:  85
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 23
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 24
# Neighbor position:  37, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 23
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 24
# Neighbor position:  38, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 23
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 24
# Neighbor position:  39, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 24
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 24
# Neighbor position:  39, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 25
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 24
# Neighbor position:  39, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  48
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 25
# Setting previous node for 39,25
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 25
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 24
# Neighbor position:  38, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  49
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 25
# Setting previous node for 38,25
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 25
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 24
# Neighbor position:  37, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  50
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 25
# Setting previous node for 37,25
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 24
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 24
# Neighbor position:  37, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 24
# STATE: QUEUE MODS
# Close size:  86
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 23
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 24
# Neighbor position:  36, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 23
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 24
# Neighbor position:  37, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 23
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 24
# Neighbor position:  38, 23
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 24
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 24
# Neighbor position:  38, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 25
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 24
# Neighbor position:  38, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 25
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 24
# Neighbor position:  37, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 25
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 24
# Neighbor position:  36, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  50
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 25
# Setting previous node for 36,25
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 24
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 24
# Neighbor position:  36, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 25
# STATE: QUEUE MODS
# Close size:  87
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 24
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 25
# Neighbor position:  37, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 24
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 25
# Neighbor position:  38, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 24
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 25
# Neighbor position:  39, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 25
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 25
# Neighbor position:  39, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 26
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 25
# Neighbor position:  39, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  50
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 26
# Setting previous node for 39,26
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 26
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 25
# Neighbor position:  38, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  51
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 26
# Setting previous node for 38,26
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 26
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 25
# Neighbor position:  37, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  52
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 26
# Setting previous node for 37,26
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 25
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 25
# Neighbor position:  37, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 25
# STATE: QUEUE MODS
# Close size:  88
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 24
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 25
# Neighbor position:  36, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 24
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 25
# Neighbor position:  37, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 24
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 25
# Neighbor position:  38, 24
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 25
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 25
# Neighbor position:  38, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 26
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 25
# Neighbor position:  38, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 26
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 25
# Neighbor position:  37, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 26
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 25
# Neighbor position:  36, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  52
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 26
# Setting previous node for 36,26
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 25
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 25
# Neighbor position:  36, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 26
# STATE: QUEUE MODS
# Close size:  89
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 25
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 26
# Neighbor position:  37, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 25
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 26
# Neighbor position:  38, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 25
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 26
# Neighbor position:  39, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 26
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 26
# Neighbor position:  39, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 27
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 26
# Neighbor position:  39, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  52
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 27
# Setting previous node for 39,27
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 27
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 26
# Neighbor position:  38, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  53
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 27
# Setting previous node for 38,27
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 27
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 26
# Neighbor position:  37, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  54
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 27
# Setting previous node for 37,27
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 26
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 26
# Neighbor position:  37, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 26
# STATE: QUEUE MODS
# Close size:  90
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 25
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 26
# Neighbor position:  36, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 25
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 26
# Neighbor position:  37, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 25
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 26
# Neighbor position:  38, 25
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 26
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 26
# Neighbor position:  38, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 27
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 26
# Neighbor position:  38, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 27
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 26
# Neighbor position:  37, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 27
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 26
# Neighbor position:  36, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  54
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 27
# Setting previous node for 36,27
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 26
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 26
# Neighbor position:  36, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 27
# STATE: QUEUE MODS
# Close size:  91
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 26
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 27
# Neighbor position:  37, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 26
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 27
# Neighbor position:  38, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 26
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 27
# Neighbor position:  39, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 27
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 27
# Neighbor position:  39, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 28
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 27
# Neighbor position:  39, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  54
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 28
# Setting previous node for 39,28
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 28
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 27
# Neighbor position:  38, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  55
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 28
# Setting previous node for 38,28
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 28
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 27
# Neighbor position:  37, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  56
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 28
# Setting previous node for 37,28
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 27
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 27
# Neighbor position:  37, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 27
# STATE: QUEUE MODS
# Close size:  92
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 26
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 27
# Neighbor position:  36, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 26
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 27
# Neighbor position:  37, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 26
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 27
# Neighbor position:  38, 26
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 27
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 27
# Neighbor position:  38, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 28
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 27
# Neighbor position:  38, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 28
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 27
# Neighbor position:  37, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 28
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 27
# Neighbor position:  36, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  56
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 28
# Setting previous node for 36,28
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 27
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 27
# Neighbor position:  36, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 28
# STATE: QUEUE MODS
# Close size:  93
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 27
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 28
# Neighbor position:  37, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 27
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 28
# Neighbor position:  38, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 27
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 28
# Neighbor position:  39, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 28
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 28
# Neighbor position:  39, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 29
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 28
# Neighbor position:  39, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  56
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 29
# Setting previous node for 39,29
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 29
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 28
# Neighbor position:  38, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  57
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 29
# Setting previous node for 38,29
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 29
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 28
# Neighbor position:  37, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  58
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 29
# Setting previous node for 37,29
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 28
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 28
# Neighbor position:  37, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 28
# STATE: QUEUE MODS
# Close size:  94
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 27
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 28
# Neighbor position:  36, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 27
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 28
# Neighbor position:  37, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 27
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 28
# Neighbor position:  38, 27
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 28
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 28
# Neighbor position:  38, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 29
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 28
# Neighbor position:  38, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 29
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 28
# Neighbor position:  37, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 29
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 28
# Neighbor position:  36, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  58
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 29
# Setting previous node for 36,29
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 28
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 28
# Neighbor position:  36, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 29
# STATE: QUEUE MODS
# Close size:  95
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 28
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 29
# Neighbor position:  37, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 28
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 29
# Neighbor position:  38, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 28
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 29
# Neighbor position:  39, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 29
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 29
# Neighbor position:  39, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 30
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 29
# Neighbor position:  39, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  58
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 30
# Setting previous node for 39,30
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 30
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 29
# Neighbor position:  38, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  59
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 30
# Setting previous node for 38,30
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 30
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 29
# Neighbor position:  37, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  60
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 30
# Setting previous node for 37,30
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 29
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 29
# Neighbor position:  37, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 29
# STATE: QUEUE MODS
# Close size:  96
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 28
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 29
# Neighbor position:  36, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 28
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 29
# Neighbor position:  37, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 28
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 29
# Neighbor position:  38, 28
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 29
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 29
# Neighbor position:  38, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 30
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 29
# Neighbor position:  38, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 30
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 29
# Neighbor position:  37, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 30
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 29
# Neighbor position:  36, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  60
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 30
# Setting previous node for 36,30
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 29
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 29
# Neighbor position:  36, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 30
# STATE: QUEUE MODS
# Close size:  97
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 29
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 30
# Neighbor position:  37, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 29
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 30
# Neighbor position:  38, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 29
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 30
# Neighbor position:  39, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 30
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 30
# Neighbor position:  39, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 31
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 30
# Neighbor position:  39, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  60
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 31
# Setting previous node for 39,31
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 31
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 30
# Neighbor position:  38, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  61
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 31
# Setting previous node for 38,31
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 31
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 30
# Neighbor position:  37, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  62
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 31
# Setting previous node for 37,31
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 30
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 30
# Neighbor position:  37, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 30
# STATE: QUEUE MODS
# Close size:  98
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 29
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 30
# Neighbor position:  36, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 29
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 30
# Neighbor position:  37, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 29
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 30
# Neighbor position:  38, 29
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 30
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 30
# Neighbor position:  38, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 31
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 30
# Neighbor position:  38, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 31
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 30
# Neighbor position:  37, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 31
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 30
# Neighbor position:  36, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  62
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 31
# Setting previous node for 36,31
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 30
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 30
# Neighbor position:  36, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 31
# STATE: QUEUE MODS
# Close size:  99
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 30
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 31
# Neighbor position:  37, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 30
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 31
# Neighbor position:  38, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 30
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 31
# Neighbor position:  39, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 31
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 31
# Neighbor position:  39, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 32
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 31
# Neighbor position:  39, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  62
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 32
# Setting previous node for 39,32
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 32
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 31
# Neighbor position:  38, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  63
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 32
# Setting previous node for 38,32
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 32
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 31
# Neighbor position:  37, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  64
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 32
# Setting previous node for 37,32
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 31
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 31
# Neighbor position:  37, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 31
# STATE: QUEUE MODS
# Close size: 100
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 30
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 31
# Neighbor position:  36, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 30
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 31
# Neighbor position:  37, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 30
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 31
# Neighbor position:  38, 30
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 31
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 31
# Neighbor position:  38, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 32
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 31
# Neighbor position:  38, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 32
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 31
# Neighbor position:  37, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 32
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 31
# Neighbor position:  36, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  64
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 32
# Setting previous node for 36,32
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 31
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 31
# Neighbor position:  36, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 32
# STATE: QUEUE MODS
# Close size: 101
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 31
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 32
# Neighbor position:  37, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 31
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 32
# Neighbor position:  38, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 31
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 32
# Neighbor position:  39, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 32
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 32
# Neighbor position:  39, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 33
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 32
# Neighbor position:  39, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  64
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 33
# Setting previous node for 39,33
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 33
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 32
# Neighbor position:  38, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  65
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 33
# Setting previous node for 38,33
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 33
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 32
# Neighbor position:  37, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  66
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 33
# Setting previous node for 37,33
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 32
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 32
# Neighbor position:  37, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 32
# STATE: QUEUE MODS
# Close size: 102
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 31
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 32
# Neighbor position:  36, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 31
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 32
# Neighbor position:  37, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 31
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 32
# Neighbor position:  38, 31
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 32
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 32
# Neighbor position:  38, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 33
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 32
# Neighbor position:  38, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 33
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 32
# Neighbor position:  37, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 33
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 32
# Neighbor position:  36, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  66
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 33
# Setting previous node for 36,33
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 32
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 32
# Neighbor position:  36, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 33
# STATE: QUEUE MODS
# Close size: 103
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 32
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 33
# Neighbor position:  37, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 32
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 33
# Neighbor position:  38, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 32
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 33
# Neighbor position:  39, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 33
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 33
# Neighbor position:  39, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 34
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 33
# Neighbor position:  39, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  66
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 34
# Setting previous node for 39,34
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 34
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 33
# Neighbor position:  38, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  67
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 34
# Setting previous node for 38,34
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 34
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 33
# Neighbor position:  37, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  68
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 34
# Setting previous node for 37,34
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 33
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 33
# Neighbor position:  37, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 33
# STATE: QUEUE MODS
# Close size: 104
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 32
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 33
# Neighbor position:  36, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 32
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 33
# Neighbor position:  37, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 32
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 33
# Neighbor position:  38, 32
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 33
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 33
# Neighbor position:  38, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 34
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 33
# Neighbor position:  38, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 34
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 33
# Neighbor position:  37, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 34
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 33
# Neighbor position:  36, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  68
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 34
# Setting previous node for 36,34
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 33
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 33
# Neighbor position:  36, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 34
# STATE: QUEUE MODS
# Close size: 105
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 33
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 34
# Neighbor position:  37, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 33
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 34
# Neighbor position:  38, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 33
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 34
# Neighbor position:  39, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 34
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 34
# Neighbor position:  39, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 35
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 34
# Neighbor position:  39, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  68
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 35
# Setting previous node for 39,35
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 35
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 34
# Neighbor position:  38, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  69
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 35
# Setting previous node for 38,35
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 35
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 34
# Neighbor position:  37, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  70
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 35
# Setting previous node for 37,35
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 34
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 34
# Neighbor position:  37, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 34
# STATE: QUEUE MODS
# Close size: 106
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 33
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 34
# Neighbor position:  36, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 33
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 34
# Neighbor position:  37, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 33
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 34
# Neighbor position:  38, 33
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 34
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 34
# Neighbor position:  38, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 35
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 34
# Neighbor position:  38, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 35
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 34
# Neighbor position:  37, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 35
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 34
# Neighbor position:  36, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  70
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 35
# Setting previous node for 36,35
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 34
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 34
# Neighbor position:  36, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 35
# STATE: QUEUE MODS
# Close size: 107
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 34
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 35
# Neighbor position:  37, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 34
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 35
# Neighbor position:  38, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 34
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 35
# Neighbor position:  39, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 35
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 35
# Neighbor position:  39, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 36
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 35
# Neighbor position:  39, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  70
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 36
# Setting previous node for 39,36
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 36
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 35
# Neighbor position:  38, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  71
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 36
# Setting previous node for 38,36
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 36
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 35
# Neighbor position:  37, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  72
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 36
# Setting previous node for 37,36
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 35
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 35
# Neighbor position:  37, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 35
# STATE: QUEUE MODS
# Close size: 108
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 34
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 35
# Neighbor position:  36, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 34
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 35
# Neighbor position:  37, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 34
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 35
# Neighbor position:  38, 34
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 35
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 35
# Neighbor position:  38, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 36
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 35
# Neighbor position:  38, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 36
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 35
# Neighbor position:  37, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 36
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 35
# Neighbor position:  36, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  72
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 36
# Setting previous node for 36,36
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 35
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 35
# Neighbor position:  36, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 36
# STATE: QUEUE MODS
# Close size: 109
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 35
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 36
# Neighbor position:  37, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 35
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 36
# Neighbor position:  38, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 35
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 36
# Neighbor position:  39, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 36
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 36
# Neighbor position:  39, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 37
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 36
# Neighbor position:  39, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  72
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 37
# Setting previous node for 39,37
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 37
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 36
# Neighbor position:  38, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  73
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 37
# Setting previous node for 38,37
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 37
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 36
# Neighbor position:  37, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  74
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 37
# Setting previous node for 37,37
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 36
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 36
# Neighbor position:  37, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  37, 36
# STATE: QUEUE MODS
# Close size: 110
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 35
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  37, 36
# Neighbor position:  36, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 35
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  37, 36
# Neighbor position:  37, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 35
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  37, 36
# Neighbor position:  38, 35
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 36
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  37, 36
# Neighbor position:  38, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 37
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  37, 36
# Neighbor position:  38, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 37
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  37, 36
# Neighbor position:  37, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 37
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  37, 36
# Neighbor position:  36, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  74
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  36, 37
# Setting previous node for 36,37
# STATE: NEIGHBOR CHECK LOOP
# Checking  36, 36
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  37, 36
# Neighbor position:  36, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  38, 37
# STATE: QUEUE MODS
# Close size: 111
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 36
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  38, 37
# Neighbor position:  37, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 36
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  38, 37
# Neighbor position:  38, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 36
# NeighborCounter:  2
# Current distance from start:    1000
# Current position:  38, 37
# Neighbor position:  39, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 37
# NeighborCounter:  3
# Current distance from start:    1000
# Current position:  38, 37
# Neighbor position:  39, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 38
# NeighborCounter:  4
# Current distance from start:    1000
# Current position:  38, 37
# Neighbor position:  39, 38
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  74
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  39, 38
# Setting previous node for 39,38
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 38
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  38, 37
# Neighbor position:  38, 38
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  75
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  38, 38
# Setting previous node for 38,38
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 38
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  38, 37
# Neighbor position:  37, 38
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_NOT_FOUND
# opencounter size:  76
# STATE: NEIGHBOR IS BETTER
# Checking neighbor position  37, 38
# Setting previous node for 37,38
# STATE: NEIGHBOR CHECK LOOP
# Checking  37, 37
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  38, 37
# Neighbor position:  37, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: CHECK DONE
# Open:  39, 37
# STATE: QUEUE MODS
# Close size: 112
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 36
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  39, 37
# Neighbor position:  38, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 36
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  39, 37
# Neighbor position:  39, 36
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# STATE: NEIGHBOR CHECK LOOP
# STATE: NEIGHBOR CHECK LOOP
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 38
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  39, 37
# Neighbor position:  39, 38
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 38
# NeighborCounter:  6
# Current distance from start:    1000
# Current position:  39, 37
# Neighbor position:  38, 38
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_NOT_FOUND
# STATE: CHECK_IF_IN_OPEN
# STATE: SEARCH_OPEN_DONE_FOUND
# STATE: CHECK IF NEIGHBOR IS BETTER
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 37
# NeighborCounter:  7
# Current distance from start:    1000
# Current position:  39, 37
# Neighbor position:  38, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: CHECK DONE
# Open:  39, 38
# STATE: QUEUE MODS
# Close size: 113
# STATE: QUEUE MODS APPEND
# STATE: SORT_QUEUE
# STATE: SORT_DONE
# STATE: CREATE NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: RESET NEIGHBORS
# STATE: GENERATE NEIGHBORS
# STATE: NEIGHBOR CHECK LOOP
# Checking  38, 37
# NeighborCounter:  0
# Current distance from start:    1000
# Current position:  39, 38
# Neighbor position:  38, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 37
# NeighborCounter:  1
# Current distance from start:    1000
# Current position:  39, 38
# Neighbor position:  39, 37
# STATE: CHECK_IF_IN_CLOSED
# NEIGHBORDISTANCE:    1000
# STATE: SEARCH_CLOSED_DONE_FOUND
# STATE: NEIGHBOR CHECK LOOP
# STATE: NEIGHBOR CHECK LOOP
# STATE: NEIGHBOR CHECK LOOP
# STATE: NEIGHBOR CHECK LOOP
# Checking  39, 39
# NeighborCounter:  5
# Current distance from start:    1000
# Current position:  39, 38
# Neighbor position:  39, 39
# STATE: RECONSTRUCT
# 39 39:  39, 38
# 39 38:  38, 37
# 38 39:   x,  x
# 38 38:  38, 37
# 38 37:  38, 36
# STATE: RECONSTRUCT_PLACE
# Counter:     0
# Current node at  39, 39
# STATE: RECONSTRUCT_NEXT
# Previous node:  39, 38
# STATE: RECONSTRUCT_PLACE
# Counter:     1
# Current node at  39, 38
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 37
# STATE: RECONSTRUCT_PLACE
# Counter:     2
# Current node at  38, 37
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 36
# STATE: RECONSTRUCT_PLACE
# Counter:     3
# Current node at  38, 36
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 35
# STATE: RECONSTRUCT_PLACE
# Counter:     4
# Current node at  38, 35
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 34
# STATE: RECONSTRUCT_PLACE
# Counter:     5
# Current node at  38, 34
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 33
# STATE: RECONSTRUCT_PLACE
# Counter:     6
# Current node at  38, 33
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 32
# STATE: RECONSTRUCT_PLACE
# Counter:     7
# Current node at  38, 32
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 31
# STATE: RECONSTRUCT_PLACE
# Counter:     8
# Current node at  38, 31
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 30
# STATE: RECONSTRUCT_PLACE
# Counter:     9
# Current node at  38, 30
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 29
# STATE: RECONSTRUCT_PLACE
# Counter:    10
# Current node at  38, 29
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 28
# STATE: RECONSTRUCT_PLACE
# Counter:    11
# Current node at  38, 28
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 27
# STATE: RECONSTRUCT_PLACE
# Counter:    12
# Current node at  38, 27
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 26
# STATE: RECONSTRUCT_PLACE
# Counter:    13
# Current node at  38, 26
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 25
# STATE: RECONSTRUCT_PLACE
# Counter:    14
# Current node at  38, 25
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 24
# STATE: RECONSTRUCT_PLACE
# Counter:    15
# Current node at  38, 24
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 23
# STATE: RECONSTRUCT_PLACE
# Counter:    16
# Current node at  38, 23
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 22
# STATE: RECONSTRUCT_PLACE
# Counter:    17
# Current node at  38, 22
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 21
# STATE: RECONSTRUCT_PLACE
# Counter:    18
# Current node at  38, 21
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 20
# STATE: RECONSTRUCT_PLACE
# Counter:    19
# Current node at  38, 20
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 19
# STATE: RECONSTRUCT_PLACE
# Counter:    20
# Current node at  38, 19
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 18
# STATE: RECONSTRUCT_PLACE
# Counter:    21
# Current node at  38, 18
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 17
# STATE: RECONSTRUCT_PLACE
# Counter:    22
# Current node at  38, 17
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 16
# STATE: RECONSTRUCT_PLACE
# Counter:    23
# Current node at  38, 16
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 15
# STATE: RECONSTRUCT_PLACE
# Counter:    24
# Current node at  38, 15
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 14
# STATE: RECONSTRUCT_PLACE
# Counter:    25
# Current node at  38, 14
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 13
# STATE: RECONSTRUCT_PLACE
# Counter:    26
# Current node at  38, 13
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 12
# STATE: RECONSTRUCT_PLACE
# Counter:    27
# Current node at  38, 12
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 11
# STATE: RECONSTRUCT_PLACE
# Counter:    28
# Current node at  38, 11
# STATE: RECONSTRUCT_NEXT
# Previous node:  38, 10
# STATE: RECONSTRUCT_PLACE
# Counter:    29
# Current node at  38, 10
# STATE: RECONSTRUCT_NEXT
# Previous node:  38,  9
# STATE: RECONSTRUCT_PLACE
# Counter:    30
# Current node at  38,  9
# STATE: RECONSTRUCT_NEXT
# Previous node:  38,  8
# STATE: RECONSTRUCT_PLACE
# Counter:    31
# Current node at  38,  8
# STATE: RECONSTRUCT_NEXT
# Previous node:  38,  7
# STATE: RECONSTRUCT_PLACE
# Counter:    32
# Current node at  38,  7
# STATE: RECONSTRUCT_NEXT
# Previous node:  38,  6
# STATE: RECONSTRUCT_PLACE
# Counter:    33
# Current node at  38,  6
# STATE: RECONSTRUCT_NEXT
# Previous node:  38,  5
# STATE: RECONSTRUCT_PLACE
# Counter:    34
# Current node at  38,  5
# STATE: RECONSTRUCT_NEXT
# Previous node:  38,  4
# STATE: RECONSTRUCT_PLACE
# Counter:    35
# Current node at  38,  4
# STATE: RECONSTRUCT_NEXT
# Previous node:  38,  3
# STATE: RECONSTRUCT_PLACE
# Counter:    36
# Current node at  38,  3
# STATE: RECONSTRUCT_NEXT
# Previous node:  38,  2
# STATE: RECONSTRUCT_PLACE
# Counter:    37
# Current node at  38,  2
# STATE: RECONSTRUCT_NEXT
# Previous node:  38,  1
# STATE: RECONSTRUCT_PLACE
# Counter:    38
# Current node at  38,  1
# STATE: RECONSTRUCT_NEXT
# Previous node:  37,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    39
# Current node at  37,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  36,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    40
# Current node at  36,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  35,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    41
# Current node at  35,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  34,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    42
# Current node at  34,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  33,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    43
# Current node at  33,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  32,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    44
# Current node at  32,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  31,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    45
# Current node at  31,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  30,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    46
# Current node at  30,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  29,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    47
# Current node at  29,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  28,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    48
# Current node at  28,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  27,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    49
# Current node at  27,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  26,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    50
# Current node at  26,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  25,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    51
# Current node at  25,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  24,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    52
# Current node at  24,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  23,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    53
# Current node at  23,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  22,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    54
# Current node at  22,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  21,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    55
# Current node at  21,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  20,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    56
# Current node at  20,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  19,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    57
# Current node at  19,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  18,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    58
# Current node at  18,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  17,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    59
# Current node at  17,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  16,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    60
# Current node at  16,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  15,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    61
# Current node at  15,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  14,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    62
# Current node at  14,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  13,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    63
# Current node at  13,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  12,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    64
# Current node at  12,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  11,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    65
# Current node at  11,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:  10,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    66
# Current node at  10,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   9,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    67
# Current node at   9,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   8,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    68
# Current node at   8,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   7,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    69
# Current node at   7,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   6,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    70
# Current node at   6,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   5,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    71
# Current node at   5,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   4,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    72
# Current node at   4,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   3,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    73
# Current node at   3,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   2,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    74
# Current node at   2,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   1,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    75
# Current node at   1,  0
# STATE: RECONSTRUCT_NEXT
# Previous node:   0,  0
# STATE: RECONSTRUCT_PLACE
# Counter:    76
# Current node at   0,  0
# RECONSTRUCT_FINISH
# Took    77 nodes to reach destination
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPOO
# XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPO
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOP
# OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOP
